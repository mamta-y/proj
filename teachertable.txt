
ADMIN DASHBOARD

<app-header></app-header>

<!--<div class="table-responsive">
  
    <table class="table table-bordered">
        <thead class="table-dark">
            <tr>
              
              <th>FirstName</th>
              <th>LastName</th>
              <th>Email</th>
             <th>teacherType</th>

            
            </tr>
        </thead>
        <tbody>
          <tr *ngFor="let student of teacherType">
            <td>{{ student.firstname }}</td>
            <td>{{ student.lastname }}</td>
            <td>{{ student.email }}</td>
           <td> <mat-slide-toggle [(ngModel)]="check"></mat-slide-toggle>
                <div> {{ check }}</div></td>-->
<!---<td>  <mat-slide-toggle [checked]="checked" 
      (change)="checked = !checked">{{checked}}</mat-slide-toggle>
      </td>-->


<!--- </tr>
        </tbody>
    </table>
  </div>-->
<!---<mat-slide-toggle [(ngModel)]="check"></mat-slide-toggle>
  <div> {{ check }}</div>-->
<div class="box">
  <div class="container-1">
    <mat-form-field>
      <input type="text" name="" id="" (keyup)="applyFilter($event.target.value)" matInput placeholder="search">
    </mat-form-field>
  </div>
</div>
<div class="table-responsive">
  <table mat-table [dataSource]="dataSource" matSort class="table table-bordered">

    <ng-container matColumnDef="firstname">
      <th mat-header-cell *matHeaderCellDef mat-sort-header> FirstName </th>
      <td mat-cell *matCellDef="let element"> {{element.firstname}} </td>
    </ng-container>


    <ng-container matColumnDef="lastname">
      <th mat-header-cell *matHeaderCellDef> lastName </th>
      <td mat-cell *matCellDef="let element"> {{element.lastname}} </td>
    </ng-container>


    <ng-container matColumnDef="email">
      <th mat-header-cell *matHeaderCellDef> Email </th>
      <td mat-cell *matCellDef="let element"> {{element.email}} </td>
    </ng-container>

    <ng-container matColumnDef="teacherType">
      <th mat-header-cell *matHeaderCellDef> Type </th>
      <td mat-cell *matCellDef="let element"> {{element.teacherType}} </td>
    </ng-container>

    <!-- toggle column -->
    <ng-container matColumnDef="toggle">
      <th mat-header-cell *matHeaderCellDef> Action </th>
      <td mat-cell *matCellDef="let element ;let i=index">
        <mat-slide-toggle [checked]="element.teacherType" (change)="updateActiveStatus($event,i)">{{element.teacherType ? 'Regular' : 'Normal'}}</mat-slide-toggle>
      </td>
    </ng-container>

    <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>
    <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>
  </table>
  <mat-paginator [length]="100" [pageSize]="10" [pageSizeOptions]="[5, 10, 25, 100]" aria-label="Select page">
  </mat-paginator>

</div>













import { Component, OnInit, ViewChild } from '@angular/core';
import { MatTableDataSource ,MatSort,MatPaginator} from '@angular/material';

export interface Types {
  firstname: string;
  lastname: string;
  email: string;
  teacherType: boolean;
  role: string;
}
const TeacherType:Types[] = [
  { firstname: 'mamta', lastname: 'yadav', email: 'mam@gmail.com', teacherType: true, role: '1', },
  { firstname: 'anjali', lastname: 'singh', email: 'anjali@gmail.com', teacherType: false, role: '1', },
  { firstname: 'chinnu', lastname: 'thomas', email: 'chinnu@gmail.com', teacherType: true, role: '1', },
  { firstname: 'rajee', lastname: 'pyla', email: 'rajee@gmail.com', teacherType: false, role: '1', },
  { firstname: 'prabhanjan', lastname: 'deshpandey', email: 'parbhu@gmail.com', teacherType: true, role: '1', },
  { firstname: 'gurunath', lastname: 'kulkarni', email: 'guru@gmail.com', teacherType: false, role: '1', },
  { firstname: 'sapna', lastname: 'pandey', email: 'sapna@gmail.com', teacherType: true, role: '1', },
  { firstname: 'salman', lastname: 'khan', email: 'sam@gmail.com', teacherType: true, role: '1', },
  { firstname: 'kareena', lastname: 'kapoor', email: 'kareena@gmail.com', teacherType: false, role: '1', },
];
@Component({
  selector: 'app-manage',
  templateUrl: './manage.component.html',
  styleUrls: ['./manage.component.css']
})
export class ManageComponent implements OnInit {
  allColumns: string[] = ['firstname', 'lastname', 'email', 'teacherType', 'toggle'];
  displayedColumns: string[];
 dataSource =  new MatTableDataSource(TeacherType);
  // dataSource = TeacherType;
  isAdmin: boolean = true;
  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;
  @ViewChild(MatSort , { static: true }) sort: MatSort;
 

  constructor() { }

  ngOnInit() {
    this.checkIfAdmin();
    this.dataSource.paginator = this.paginator;
    this.dataSource.sort=this.sort;
    
    
  }
  checkIfAdmin() {
    this.displayedColumns = this.isAdmin ? this.allColumns : this.allColumns.filter((column) => column !== 'toggle');
  }

  updateActiveStatus(e,index) {
    // event.element.checked = !event.element.checked;
    // element.teacherType = !element.teacherType;
    console.log('give data',this.dataSource);
    if (e.checked)
      this.dataSource.data[index].teacherType=true
    else
      this.dataSource.data[index].teacherType=false
  }
  applyFilter(filterValue) {
    this.dataSource.filter = filterValue.trim().toLowerCase();
  }


}

